<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgPatient.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>